---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

import BlogPost from "@/components/organisms/BlogPost.astro";
import CTA from "@/components/organisms/CTA.astro";
import Base from "@/components/templates/Base.astro";
import { AppConfig } from "@/utils/app-config";

export const getStaticPaths: GetStaticPaths = async () => {
	const posts = await getCollection("blog");

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: {
			post,
		},
	}));
};

interface Props {
	post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
const { Content } = await post.render();
const title = `${post.data.title} - ${AppConfig.site_name}`;
---

<Base
  head={{
    title,
    description: post.data.description,
    data: post,
    imageSrc: post.data.imgSrc,
    imageAlt: post.data.imgAlt,
  }}
>
  <BlogPost post={post}>
    <Content />
    <div class="mt-10" id="comments">
      <script is:inline>
        script = document.createElement('script');
        script.src = 'https://giscus.app/client.js';
        script.setAttribute('data-repo', 'tranthaison1231/son-tran');
        script.setAttribute('data-repo-id', 'R_kgDOJLDfzA');
        script.setAttribute('data-category', 'Announcements');
        script.setAttribute('data-category-id', 'DIC_kwDOJLDfzM4CZDeC');
        script.setAttribute('data-mapping', 'pathname');
        script.setAttribute('data-strict', '0');
        script.setAttribute('data-reactions-enabled', '0');
        script.setAttribute('data-emit-metadata', '0');
        script.setAttribute('data-theme', theme === 'dark' ? 'dark' : 'light');
        script.setAttribute('data-lang', 'en');
        script.setAttribute('crossorigin', 'anonymous');
        script.async = true;
        document.getElementById('comments').appendChild(script);
      </script>
    </div>
  </BlogPost>

  <CTA />
</Base>
